(self.webpackChunkv3confirm=self.webpackChunkv3confirm||[]).push([[509],{958:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-8daa1a0e",path:"/",title:"v3confirm",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Installation",slug:"installation",children:[{level:3,title:"NPM",slug:"npm",children:[]},{level:3,title:"Yarn",slug:"yarn",children:[]}]},{level:2,title:"Usage",slug:"usage",children:[]},{level:2,title:"Options",slug:"options",children:[{level:3,title:"root",slug:"root",children:[]},{level:3,title:"yesText",slug:"yestext",children:[]},{level:3,title:"noText",slug:"notext",children:[]}]}],filePathRelative:"README.md",git:{updatedTime:1622541022e3}}},623:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>d});var p=a(252);const t=(0,p.Wm)("h1",{id:"v3confirm"},[(0,p.Wm)("a",{class:"header-anchor",href:"#v3confirm"},"#"),(0,p.Uk)(" v3confirm")],-1),e={href:"https://codecov.io/gh/malekim/v3confirm",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Wm)("img",{src:"https://codecov.io/gh/malekim/v3confirm/branch/main/graph/badge.svg?token=CFUBKUJKVB",alt:"codecov"},null,-1),l={href:"https://github.com/semantic-release/semantic-release",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Wm)("img",{src:"https://img.shields.io/badge/  ðŸ“¦ðŸš€-semantic--release-e10079.svg",alt:"semantic-release"},null,-1),u=(0,p.uE)('<p>A plugin dedicated for vue3 to show confirm dialog modal. Currently the plugin works only with composition api.</p><h2 id="installation"><a class="header-anchor" href="#installation">#</a> Installation</h2><p>The plugin can be installed by npm or yarn.</p><h3 id="npm"><a class="header-anchor" href="#npm">#</a> NPM</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> v3confirm --save\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="yarn"><a class="header-anchor" href="#yarn">#</a> Yarn</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> v3confirm\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="usage"><a class="header-anchor" href="#usage">#</a> Usage</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> VueConfirmPlugin <span class="token keyword">from</span> <span class="token string">&#39;v3confirm&#39;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;@/App.vue&#39;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueConfirmPlugin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  root<span class="token operator">:</span> <span class="token string">&#39;#confirm&#39;</span><span class="token punctuation">,</span>\n  yesText<span class="token operator">:</span> <span class="token string">&#39;Yes&#39;</span><span class="token punctuation">,</span>\n  noText<span class="token operator">:</span> <span class="token string">&#39;No&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Remember to have a html handler somewhere with id provided in root option. For example in App.vue:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>confirm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Then in component with composition api:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deleteAllUsers<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>deleteAllUsersWithAsync<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> useConfirm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;v3confirm&#39;</span>\n\n  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function-variable function">setup</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> confirm <span class="token operator">=</span> <span class="token function">useConfirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n      <span class="token keyword">const</span> <span class="token function-variable function">deleteAllUsers</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        confirm<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ok</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;All users deleted&#39;</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Users not deleted&#39;</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token keyword">const</span> <span class="token function-variable function">deleteAllUsersWithAsync</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> ok <span class="token operator">=</span> <span class="token keyword">await</span> confirm<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&#39;Are you sure?&#39;</span><span class="token punctuation">)</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;All users deleted&#39;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Users not deleted&#39;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        deleteAllUsers<span class="token punctuation">,</span>\n        deleteAllUsersWithAsync<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h2 id="options"><a class="header-anchor" href="#options">#</a> Options</h2><h3 id="root"><a class="header-anchor" href="#root">#</a> root</h3><p>Type: string</p><p>Default: none</p><p>An HTML element where confirm dialog is attached. It should be empty.</p><h3 id="yestext"><a class="header-anchor" href="#yestext">#</a> yesText</h3><p>Type string</p><p>Default: &#39;yes&#39;</p><p>A text used for confirm button.</p><h3 id="notext"><a class="header-anchor" href="#notext">#</a> noText</h3><p>Type string</p><p>Default: &#39;no&#39;</p><p>A text used for decline button.</p><h1 id="styles"><a class="header-anchor" href="#styles">#</a> Styles</h1>',27),r=(0,p.Uk)("This project is using bulma.io styles. If your project is not using bulma, then you can style confirm for your own or "),i={href:"https://bulma.io/documentation/overview/modular/",target:"_blank",rel:"noopener noreferrer"},k=(0,p.Uk)("import"),m=(0,p.Uk)(" bulma modal."),b=(0,p.uE)('<div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token keyword">@import</span> <span class="token string">&quot;bulma/sass/utilities/_all.sass&quot;</span>\n<span class="token keyword">@import</span> <span class="token string">&quot;bulma/sass/components/modal.sass&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',1),d={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[t,(0,p.Wm)("p",null,[(0,p.Wm)("a",e,[o,(0,p.Wm)(a)]),(0,p.Wm)("a",l,[c,(0,p.Wm)(a)])]),u,(0,p.Wm)("p",null,[r,(0,p.Wm)("a",i,[k,(0,p.Wm)(a)]),m]),b],64)}}}}]);